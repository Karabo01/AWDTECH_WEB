var fs = require('fs-extra');
const chalk = require('chalk');
var path = require('path');
const commander = require('commander');
const packageJson = require('./package.json');

var viewFile = `import React from 'react'

export default (props) => {
    return (
        <div />
    )
}
`
var containerFile = `import React from 'react'
import ViewComponent from './view'

export default (props) => {
    return (
        <ViewComponent {...props} />
    )
}
`
let projectName;
const program = new commander.Command(packageJson.name)
    .version(packageJson.version)
    .arguments('<component-name>')
    .usage(`${chalk.green('<component-name>')} [options]`)
    .action(name => {
        projectName = name;
    })
    .parse(process.argv);
const indexFile = `export { default } from './container'
`
const root = path.resolve(projectName);

if (fs.existsSync(projectName)) {
    console.log(
        chalk.red('Such component is exist! Please try another name.')
    );
} else {
    fs.ensureDirSync(projectName);
    fs.writeFileSync(
        path.join(root, 'container.jsx'),
        containerFile
    );
    fs.writeFileSync(
        path.join(root, 'view.jsx'),
        viewFile
    );
    fs.writeFileSync(
        path.join(root, 'index.jsx'),
        indexFile
    );
}